from kivy.lang import Builder
from kivy.uix.boxlayout import BoxLayout
from kivymd.app import MDApp
from kivymd.uix.button import MDRaisedButton
from kivymd.uix.textfield import MDTextField


class CalculatorApp(MDApp):
    def build(self):
        self.theme_cls.theme_style = "Dark"  # You can change this to "Light" if you prefer a light theme
        self.theme_cls.primary_palette = "Red"
        return Builder.load_string(
            """
BoxLayout:
    orientation: "vertical"
    spacing: "10dp"
    
    MDTextField:
        id: display
        hint_text: "0"
        halign: "right"
        readonly: True
        font_size: "30sp"
        
    GridLayout:
        cols: 4
        spacing: "10dp"
        padding: "10dp"
        
        MDRaisedButton:
            text: "7"
            on_press: app.on_button_press(self.text)
            
        MDRaisedButton:
            text: "8"
            on_press: app.on_button_press(self.text)
            
        MDRaisedButton:
            text: "9"
            on_press: app.on_button_press(self.text)
            
        MDRaisedButton:
            text: "/"
            on_press: app.on_button_press(self.text)
            
        MDRaisedButton:
            text: "4"
            on_press: app.on_button_press(self.text)
            
        MDRaisedButton:
            text: "5"
            on_press: app.on_button_press(self.text)
            
        MDRaisedButton:
            text: "6"
            on_press: app.on_button_press(self.text)
            
        MDRaisedButton:
            text: "*"
            on_press: app.on_button_press(self.text)
            
        MDRaisedButton:
            text: "1"
            on_press: app.on_button_press(self.text)
            
        MDRaisedButton:
            text: "2"
            on_press: app.on_button_press(self.text)
            
        MDRaisedButton:
            text: "3"
            on_press: app.on_button_press(self.text)
            
        MDRaisedButton:
            text: "-"
            on_press: app.on_button_press(self.text)
            
        MDRaisedButton:
            text: "C"
            on_press: app.clear_display()
            
        MDRaisedButton:
            text: "0"
            on_press: app.on_button_press(self.text)
            
        MDRaisedButton:
            text: "="
            on_press: app.calculate()
            
        MDRaisedButton:
            text: "+"
            on_press: app.on_button_press(self.text)
    """
        )

    def on_button_press(self, button_text):
        current_text = self.root.ids.display.text
        new_text = current_text + button_text
        self.root.ids.display.text = new_text

    def clear_display(self):
        self.root.ids.display.text = "0"

    def calculate(self):
        try:
            expression = self.root.ids.display.text
            result = str(eval(expression))
            self.root.ids.display.text = result
        except Exception as e:
            self.root.ids.display.text = "Error"


if __name__ == "__main__":
    CalculatorApp().run()
